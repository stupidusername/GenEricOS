#:import Core containers.core.Core

<MySlider>:
        canvas:
                Color:
                        rgb: 1, 1, 1
                BorderImage:
                        border: self.border_horizontal if self.orientation == 'horizontal' else self.border_vertical
                        pos: (self.x + self.padding, self.center_y - self.background_width / 2) if self.orientation == 'horizontal' else (self.center_x - self.background_width / 2, self.y + self.padding)
                        size: (self.width - self.padding * 2, self.background_width) if self.orientation == 'horizontal' else (self.background_width, self.height - self.padding * 2)
                        source: (self.background_disabled_horizontal if self.orientation == 'horizontal' else self.background_disabled_vertical) if self.disabled else (self.background_horizontal if self.orientation == 'horizontal' else self.background_vertical)
                Color:
                        rgba: root.value_track_color if self.value_track and self.orientation == 'horizontal' else [1, 1, 1, 0]
                Line:
                        width: self.value_track_width
                        points: self.x + self.padding, self.center_y - self.value_track_width / 2, self.value_pos[0], self.center_y - self.value_track_width / 2
                Color:
                        rgba: root.value_track_color if self.value_track and self.orientation == 'vertical' else [1, 1, 1, 0]
                Line:
                        width: self.value_track_width
                        points: self.center_x, self.y + self.padding, self.center_x, self.value_pos[1]
        Image:
                pos: (root.value_pos[0] - root.cursor_width / 2, root.center_y - root.cursor_height / 2) if root.orientation == 'horizontal' else (root.center_x - root.cursor_width / 2, root.value_pos[1] - root.cursor_height / 2)
                size: root.cursor_size
                source: 'images/slider_cursor.png'
                color: Core.theme().get_accent_color()
